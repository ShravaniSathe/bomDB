/*
Deployment script for bomDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "bomDB"
:setvar DefaultFilePrefix "bomDB"
:setvar DefaultDataPath "D:\SQL server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "D:\SQL server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The type for column Grade in table [dbo].[ItemMasterSales] is currently  VARCHAR (100) NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (50) NULL.

The type for column ItemCode in table [dbo].[ItemMasterSales] is currently  VARCHAR (100) NOT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (50) NULL.

The type for column ItemName in table [dbo].[ItemMasterSales] is currently  VARCHAR (255) NOT NULL but is being changed to  VARCHAR (100) NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (100) NULL.

The type for column UOM in table [dbo].[ItemMasterSales] is currently  VARCHAR (50) NULL but is being changed to  VARCHAR (10) NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (10) NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[ItemMasterSales])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Check Constraint unnamed constraint on [dbo].[ItemMasterRawMaterial]...';


GO
ALTER TABLE [dbo].[ItemMasterRawMaterial] DROP CONSTRAINT [CK__ItemMaste__PType__3C69FB99];


GO
PRINT N'Dropping Check Constraint unnamed constraint on [dbo].[ItemMasterSales]...';


GO
ALTER TABLE [dbo].[ItemMasterSales] DROP CONSTRAINT [CK__ItemMaste__PType__37A5467C];


GO
PRINT N'Dropping Check Constraint unnamed constraint on [dbo].[ItemRawMaterialMapping]...';


GO
ALTER TABLE [dbo].[ItemRawMaterialMapping] DROP CONSTRAINT [CK__ItemRawMa__Procu__49C3F6B7];


GO
PRINT N'Altering Table [dbo].[ItemMasterSales]...';


GO
ALTER TABLE [dbo].[ItemMasterSales] ALTER COLUMN [Grade] VARCHAR (50) NULL;

ALTER TABLE [dbo].[ItemMasterSales] ALTER COLUMN [ItemCode] VARCHAR (50) NULL;

ALTER TABLE [dbo].[ItemMasterSales] ALTER COLUMN [ItemName] VARCHAR (100) NULL;

ALTER TABLE [dbo].[ItemMasterSales] ALTER COLUMN [UOM] VARCHAR (10) NULL;


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[ItemMasterRawMaterial]...';


GO
ALTER TABLE [dbo].[ItemMasterRawMaterial] WITH NOCHECK
    ADD CHECK (PType IN ('M', 'BO'));


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[ItemMasterSales]...';


GO
ALTER TABLE [dbo].[ItemMasterSales] WITH NOCHECK
    ADD CHECK (PType IN ('M', 'BO'));


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[ItemRawMaterialMapping]...';


GO
ALTER TABLE [dbo].[ItemRawMaterialMapping] WITH NOCHECK
    ADD CHECK (ProcureType IN ('M', 'BO'));


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.ItemMasterRawMaterial'), OBJECT_ID(N'dbo.ItemMasterSales'), OBJECT_ID(N'dbo.ItemRawMaterialMapping'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
